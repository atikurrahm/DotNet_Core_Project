// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Single_Page_Application.Models;

#nullable disable

namespace Single_Page_Application.Migrations
{
    [DbContext(typeof(HUSDbContext))]
    [Migration("20221030050946_firstmigration")]
    partial class firstmigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Single_Page_Application.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerId"), 1L, 1);

                    b.Property<string>("CustomerAddress")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("WorkAreaId")
                        .HasColumnType("int");

                    b.Property<string>("WorkDescription")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("CustomerId");

                    b.HasIndex("WorkAreaId");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("Single_Page_Application.Models.WorkArea", b =>
                {
                    b.Property<int>("WorkAreaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WorkAreaId"), 1L, 1);

                    b.Property<int>("Skill")
                        .HasColumnType("int");

                    b.Property<string>("WorkAreaName")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.HasKey("WorkAreaId");

                    b.ToTable("WorkAreas");
                });

            modelBuilder.Entity("Single_Page_Application.Models.Worker", b =>
                {
                    b.Property<int>("WorkerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WorkerId"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("IsRunning")
                        .HasColumnType("bit");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Picture")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("WorkerName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("WorkerId");

                    b.ToTable("Workers");
                });

            modelBuilder.Entity("Single_Page_Application.Models.WorkerArea", b =>
                {
                    b.Property<int>("WorkerId")
                        .HasColumnType("int");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.HasKey("WorkerId", "CustomerId");

                    b.HasIndex("CustomerId");

                    b.ToTable("WorkerAreas");
                });

            modelBuilder.Entity("Single_Page_Application.Models.WorkerPayment", b =>
                {
                    b.Property<int>("PaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PaymentId"), 1L, 1);

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("date");

                    b.Property<decimal>("Payrate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("date");

                    b.Property<decimal>("TotalPayment")
                        .HasColumnType("decimal(18,2)");

                    b.Property<float>("TotalWorkHour")
                        .HasColumnType("real");

                    b.Property<int>("WorkerId")
                        .HasColumnType("int");

                    b.HasKey("PaymentId");

                    b.HasIndex("WorkerId");

                    b.ToTable("WorkerPayments");
                });

            modelBuilder.Entity("Single_Page_Application.Models.Customer", b =>
                {
                    b.HasOne("Single_Page_Application.Models.WorkArea", "WorkArea")
                        .WithMany("Customers")
                        .HasForeignKey("WorkAreaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("WorkArea");
                });

            modelBuilder.Entity("Single_Page_Application.Models.WorkerArea", b =>
                {
                    b.HasOne("Single_Page_Application.Models.Worker", "Worker")
                        .WithMany("WorkerAreas")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Single_Page_Application.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("WorkerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Worker");
                });

            modelBuilder.Entity("Single_Page_Application.Models.WorkerPayment", b =>
                {
                    b.HasOne("Single_Page_Application.Models.Worker", "Worker")
                        .WithMany("WorkerPayments")
                        .HasForeignKey("WorkerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Worker");
                });

            modelBuilder.Entity("Single_Page_Application.Models.WorkArea", b =>
                {
                    b.Navigation("Customers");
                });

            modelBuilder.Entity("Single_Page_Application.Models.Worker", b =>
                {
                    b.Navigation("WorkerAreas");

                    b.Navigation("WorkerPayments");
                });
#pragma warning restore 612, 618
        }
    }
}
