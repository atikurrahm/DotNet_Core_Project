@model DataViewModel
@{
    ViewData["Title"] = "Index";
}
<div class="row m-1">
        <h3>Customers</h3>
        <div class="d-flex justify-content-end mb-1">
            <button class="btn btn-primary btn-sm" id="addcust"><span class="bi bi-plus"></span> Add</button>
        </div>
        @await Html.PartialAsync("_CustomerTable", Model.Customers)
</div>
<div class="row">
    <div class="col-6">
        <h3>WorkAreas</h3>
        <div class="d-flex justify-content-end mb-1">
            <button class="btn btn-primary btn-sm" id="addworkArea"><span class="bi bi-plus"></span> Add</button>
        </div>
        @await Html.PartialAsync("_WorkAreaTable", Model.WorkAreas, new ViewDataDictionary(this.ViewData) { { "id", Model.SelectedWorkAreaId } })
    </div>
    <div class="col-6">
        <h3>Worker Detail</h3>
        <div class="d-flex justify-content-end mb-1">
            <button class="btn btn-primary btn-sm" id="addwork"><span class="bi bi-plus"></span> Add</button>
        </div>
        <div id="oidiv">
            @await Html.PartialAsync("_WorkTable", Model.Works)
        </div>
    </div>
</div>
<div class="row m-1">
        <h3>Workers</h3>
        <div class=" d-flex justify-content-end mb-1 mb-1">
            <button class="btn btn-primary btn-sm " id="addworker"><span class="bi bi-plus"></span> Add</button>
        </div>
        @await Html.PartialAsync("_WorkerTable", Model.Workers)
    </div>

@*<div>
    @await Html.PartialAsync("_CreateOrder",  null, new ViewDataDictionary(this.ViewData){{"Products", Model.Products}, {"Customers", Model.Customers}})
</div>*@
<!--Modal-->
<div class="modal" tabindex="-1" id="modal">
    <div class="modal-dialog modal-xl">
        <div class="modal-content">
            <div class="modal-header bg-primary text-white">
                <h5 class="modal-title" id="mtitle"></h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body" id="mbody">
                <p>Modal body text goes here.</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="button" id="save" class="btn btn-primary" form="f">Save changes</button>
            </div>
        </div>
    </div>
</div>
<div class="modal" tabindex="-1" id="delModal">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-warning text-white">
                <h5 class="modal-title">Confirm</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p>Are you sure to delete this item?</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-danger" id="deleteItem">Delete</button>
            </div>
        </div>
    </div>
</div>
<!--Toast-->
<div class="position-absolute bottom-0 end-0 p-3" style="z-index: 11">
    <div id="toastNotice" class="toast hide" role="alert" aria-live="assertive" aria-atomic="true">
        <div class="toast-header">
            <strong class="me-auto" id="toasthead">Bootstrap</strong>

            <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
        </div>
        <div class="toast-body" id="toastbody">
            Hello, world! This is a toast message.
        </div>
    </div>
</div>
@section styles
    {
    <link rel="stylesheet" href="~/libs/picker/css/bootstrap-datepicker.standalone.css" />
}
    @section scripts {
    @await Html.PartialAsync("_ValidationScriptsPartial")
    <script src="~/libs/picker/js/bootstrap-datepicker.js"></script>
    <script>
        var myModal = new bootstrap.Modal(document.getElementById('modal'));
        var delModal = new bootstrap.Modal(document.getElementById('delModal'));
        var myAlert = document.getElementById('toastNotice');
        var bsAlert = new bootstrap.Toast(myAlert);
        var itemToWorkWith;
        $(() => {
            $(".date").datepicker();


            ///////////WorkArea select //////////


            $(document).on("click", "button.select", function () {


                var workAreaId = $(this).data("workarea-id");
                console.log(workAreaId)
                var previousSelected = $("tr.bg-info")
                previousSelected.removeClass("bg-info");
                previousSelected.find("button.btn").removeClass("disabled");
                
                $(this).closest("tr").addClass("bg-info");
                $(this).closest("tr").find("button.btn").addClass("disabled");
                $.ajax({
                    type: "POST",
                    url: "/Main/GetSelectedWorks/" + workAreaId,
                    success: r => {
                        $("#oidiv").html(r);
                    }
                })
            });
            /////////////////end///////////

            ////////////////Delete ///////////


            $(document).on('click', 'button.del', function () {
                itemToWorkWith = $(this);
                delModal.show();
                //console.log(itemToWorkWith);
                

            });
            $('#deleteItem').click(() => {
                delModal.hide();
                var dbType = itemToWorkWith.data("db-type");
                var dbAction = itemToWorkWith.data("db-action");
                var controllerAction = itemToWorkWith.data("controller-action");
                var id = itemToWorkWith.data(`${dbType}-id`);
                console.log(`${dbType} ${dbAction} ${controllerAction}`);
                console.log(id);
                console.log($(`#${dbType}_tr_${id}`))
                $(`#${dbType}_tr_${id}`).remove();
                if(dbType == 'work'){
                    var oid = itemToWorkWith.data("workarea-id");
                    var pid = itemToWorkWith.data("worker-id");
                    $.ajax({
                        type: 'POST',
                        url: `/Main/${controllerAction}/?oid=${oid}&pid=${pid}`,
                        
                        success: r => {
                            if (r.success == true) {
                                $("#toasthead").html("Success");
                                $("#toastbody").html(r.message);

                                bsAlert.show();
                                $(`#${dbType}_tr_${oid}_${pid}`).remove();
                            }
                            else {
                                $("#toasthead").html("Failed");
                                $("#toastbody").html(r.message);

                                bsAlert.show();
                            }
                        }
                    });
                }
                else
                {
                    $.ajax({
                        type: 'POST',
                        url: `/Main/${controllerAction}/${id}`,
                        success: r => {
                            if (r.success == true) {
                                $("#toasthead").html("Success");
                                $("#toastbody").html(r.message);

                                bsAlert.show();
                                $(`#${dbType}_tr_${id}`).remove();
                            }
                            else {
                                $("#toasthead").html("Failed");
                                $("#toastbody").html(r.message);

                                bsAlert.show();
                            }
                        }
                    });
                }
            });
            //////////////////Delete/////////////


            //////////////////Edit///////////////
           
            $(document).on('click', 'button.edit', function () {
                var dbType = $(this).data("db-type");
                var dbAction = $(this).data("db-action");
                var controllerAction = $(this).data("controller-action");
                var id = $(this).data(`${dbType}-id`);
                console.log(`${dbType} ${dbAction} ${controllerAction}`);
                console.log(id);
                if (dbType == 'work') {
                    var oid = $(this).data("workarea-id");
                    var pid = $(this).data("worker-id");
                    $.ajax({
                        type: "GET",
                        url: `/Main/${controllerAction}/?oid=${oid}&pid=${pid}`,
                        success: r => {
                            $("#mbody").html(r);
                            $("#mtitle").html(`Edit ${dbType}`);

                            myModal.show();
                            var f = $("#f");
                   
                            $.validator.unobtrusive.parse(f);
                            if (dbType == 'workarea') {
                                $(".date").datepicker({
                                    format:'yyyy-mm-dd'
                                });
                            }
                        }
                    });
                }
                else {
                    $.ajax({
                        type: "GET",
                        url: `/Main/${controllerAction}/${id}`,
                        success: r => {
                            $("#mbody").html(r);
                            $("#mtitle").html(`Edit ${dbType}`);

                            myModal.show();
                            var f = $("#f");
                            $.validator.unobtrusive.parse(f);
                            if (dbType == 'workarea') {
                                $(".date").datepicker({
                                    format:'yyyy-mm-dd'
                                });
                            }
                        }

                    });
                }
            });

            ////////////////Edit end//////////

            ////////////////delete ///////////////////


            $(document).on("click", "button.deloi-insert", function () {
                if ($("button.deloi-insert").length < 2) return;
                $(this).parent().parent().remove();
            })
            //delete order item on insert end

            //////////////////Addstart//////////////////

            $("#addcust").click(() => {
                $.ajax({
                    type: "GET",
                    url: "@Url.Action("CreateCustomer", "Main")",
                    success: r => {
                        $("#mbody").html(r);
                        $("#mtitle").html("Add Customer");

                        myModal.show();
                        var f = $("#f");
                        $.validator.unobtrusive.parse(f);
                    }

                });
            });
                //Add Add Work 
                    $("#addwork").click(function () {
                    var id = $('button.select.disabled').data("workarea-id")
                    $.ajax({
                        type: "GET",
                        url: "/Main/CreateWork/" + id,
                        success: r => {
                            $("#mbody").html(r);
                            $("#mtitle").html("Add Work");

                            myModal.show();
                            var f = $("#f");
                            console.log(f);
                            $.validator.unobtrusive.parse(f);
                        }

                    });
                })

            /////////Add worker start

            $("#addworker").click(() => {
                $.ajax({
                    type: "GET",
                    url: "@Url.Action("CreateWorker", "Main")",
                    success: r => {
                        $("#mbody").html(r);
                        $("#mtitle").html("Add Worker");

                        myModal.show();
                        var f = $("#f");
                        $.validator.unobtrusive.parse(f);
                            $(".date").datepicker({
                                format:'yyyy-mm-dd'
                            });
                    }

                });


               
            });

            ////////////////Add WorkArea start

            $("#addworkArea").click(() => {
                $.ajax({
                    type: "GET",
                    url: "@Url.Action("CreateWorkArea", "Main")",
                    success: r => {
                        $("#mbody").html(r);
                        $("#mtitle").html("Add WorkArea");

                        myModal.show();
                        var f = $("#f");
                        $.validator.unobtrusive.parse(f);
                        
                    }

                });
            });

            //Save click start


            $("#save").click(function () {
                var button = $(this);
                var isValid = $("#f").valid();
                
                if (isValid == true) {
                    var dbType = $("#f").data("db-type");
                    var dbAction = $("#f").data("db-action");
                    var controllerAction = $("#f").data("controller-action");
                    
                    var data = createData(dbType, dbAction);
                    
                    if (dbType == "customer") {

                        $.ajax({
                            url: `/Main/${controllerAction}`,
                            type: "POST",
                            data: data,
                            dataType: "json",
                            success: r => {
                                if (dbAction == "insert") {
                                    $("#toasthead").html("Success");
                                    $("#toastbody").html("Data inserted successfully");
                                    myModal.hide();
                                    bsAlert.show();
                                    addToTable(dbType, r);

                                    

                                }
                                if (dbAction == "edit") {
                                    $("#toasthead").html("Success");
                                    $("#toastbody").html("Data saved successfully");
                                    myModal.hide();
                                    bsAlert.show();


                                    replaceRow(dbType, `customer_tr_${r.customerId}`, r);

                                }

                            },
                            error: function (err) {
                                alert(err.statusText);
                                $("#toasthead").html("Failed");
                                $("#toastbody").html("Failed to insert data");

                                bsAlert.show();
                            }
                        });
                    }
                    if (dbType == "worker") {
                        $.ajax({
                            url: `/Main/${controllerAction}`,
                            type: "POST",
                            contentType: false, 
                            processData: false, 
                            data: data,
                            success: function (result) {
                                console.log(result);
                                if (dbAction == "insert") {
                                    $("#toastheader").html("Success");
                                    $("#toastbody").html("Data inserted successfully");
                                    bsAlert.show();
                                    if (dbAction == 'insert') addToTable(dbType, result);

                                }
                                myModal.hide();
                            },
                            error: function (err) {
                                alert(err.statusText);
                                $("#toasthead").html("Failed");
                                $("#toastbody").html("Failed to insert data");
                                bsAlert.show();
                            }
                        });
                    }
                    if (dbType == "workarea") {
                        var isValid = $("#f").valid();
                        console.log(isValid)
                        if (isValid == true) {
                            var dbType = $("#f").data("db-type");
                            var dbAction = $("#f").data("db-action");
                            var controllerAction = $("#f").data("controller-action");
                            console.log(`${dbType} ${dbAction} ${controllerAction}`);
                            var data = $("#f").serialize();
                            //console.log(id);
                            $.ajax({
                                type: "POST",
                                url: `/Main/${controllerAction}`,
                                data: data,
                                success: r => {
                                    console.log(r);
                                    $("#toasthead").html("Success");
                                    $("#toastbody").html("Data inserted successfully");
                                    myModal.hide();
                                    bsAlert.show();
                                    if (dbAction == 'insert') addToTable(dbType, r);
                                    if (dbAction == "edit") {
                                        $("#toasthead").html("Success");
                                        $("#toastbody").html("Data saved successfully");
                                        myModal.hide();
                                        bsAlert.show();
                                        console.log( `workarea_tr_${r.workAreaId}`);
                                            replaceRow(dbType, `workarea_tr_${r.workAreaId}`, r);

                                    }

                                }
                            });
                         }
                    }

                    
                    if (dbType == "work") {
                        var isValid = $("#f").valid();
                        console.log(isValid)
                        if (isValid == true) {
                            var dbType = $("#f").data("db-type");
                            var dbAction = $("#f").data("db-action");
                            var controllerAction = $("#f").data("controller-action");
                            console.log(`${dbType} ${dbAction} ${controllerAction}`);
                            var data = $("#f").serialize();
                            $.ajax({
                                type: "POST",
                                url: `/Main/${controllerAction}`,
                                data: data,
                                success: r => {
                                    console.log(r);
                                    $("#toasthead").html("Success");
                                    $("#toastbody").html("Data inserted successfully");
                                    myModal.hide();
                                    bsAlert.show();
                                    if (dbAction == 'insert') addToTable(dbType, r);
                                    if (dbAction == "edit") {
                                        $("#toasthead").html("Success");
                                        $("#toastbody").html("Data saved successfully");
                                        myModal.hide();
                                        bsAlert.show();
                                        replaceRow(dbType, `work_tr_${r.workAreaId}_${r.workerId}`, r);

                                    }

                                }
                            });
                        }
                    }
                }


            });

            /////Save click end


            //Add more workarea item start

            $(document).on("click", "button#addWorkForm", () => {
                $.ajax({
                    type: 'GET',
                    url: '/Main/CreateWork',
                    success: r => {

                        $("div#works").append(r);

                    }
                })
            });
 
        });



        //Function form data builder start


        function createData(dbType, dbAction) {
            if (dbType == "customer") {
                var obj = {
                    CustomerName: $("#CustomerName").val(),
                    
                    Email: $("#Email").val(),
                    Address: $("#Address").val(),
                    CustomerAddress: $("#CustomerAddress").val(),
                    WorkDescription: $("#WorkDescription").val()
                };
                if (dbAction != 'insert') obj.CustomerID = $("#CustomerId").val();
                return obj;
            }

            if (dbType == "worker") {
                var formData = new FormData();
                if (dbAction != 'insert') formData.append("WorkerId", $("#WorkerId").val());
                formData.append("WorkerName", $("#WorkerName").val());
                formData.append("Phone", $("#Phone").val());
                formData.append("StartDate", $("#StartDate").val());
                formData.append("EndDate", $("#EndDate").val());
                formData.append("Payrate", $("#Payrate").val());
                formData.append("TotalWorkHour", $("#TotalWorkHour").val());
                formData.append("TotalPayment", $("#TotalPayment").val());
                formData.append("Picture", document.getElementById("Picture").files[0]);
                return formData;
            };

        }

        //Function replace row start


        function replaceRow(dbType, rowid, r) {
            
            if (dbType == 'customer') {
                $(`#${rowid}`).html(` <td>${r.customerName}</td>
                            
                            <td>${r.email}</td>
                            <td>${r.customerAddress}</td>
                            <td>${r.workDescription}</td>
                            <td>
                                  <button type="button" class="btn btn-primary btn-sm rounded-circle edit" data-db-type="customer"  data-db-action="edit" data-customer-id="${r.customerId}" data-controller-action="EditCustomer"><i class="bi bi-pencil"></i></button>
                                  <button type="button" class="btn btn-danger btn-sm rounded-circle del" data-db-type="customer"  data-db-action="delete" data-customer-id="${r.customerId}" data-controller-action="DeleteCustomer"><i class="bi bi-trash" ></i></button>
                            </td>`);
            }
            if (dbType == 'worker') {
                console.log($(`#${rowid}`));
                $(`#${rowid}`).html(`<td style="width:50px"><img src="/Pictures/${r.picture}" style="width:40px" class="img-thumbnail rounded-circle" /></td>
                            <td>${r.workerName}</td>
                            <td>${r.phone}</td>
                                <td>${formatDate(new Date(r.startDate))}</td>
                                                <td>${r.formatDate(new Date(r.endDate))}</td>
                            <td>${r.payrate}</td>
                            <td>${r.totalWorkHour}</td>
                            <td>${r.totalPayment}</td>
                            <td>
                                    <button type="button" class="btn btn-primary btn-sm rounded-circle edit" data-db-type="worker" data-db-action="edit" data-worker-id="${r.workerId}" data-controller-action="EditWorker"><i class="bi bi-pencil"></i></button>
                                    <button type="button" class="btn btn-danger btn-sm rounded-circle del" data-db-type="worker" data-db-action="delete" data-worker-id="${r.workerId}" data-controller-action="DeleteWorker"><i class="bi bi-trash"></i></button>
                 </td>`);
            }
            if(dbType == 'workarea')
            {
                $(`#${rowid}`).html(`<td style="width:50px"><button type="button" class="btn btn-sm select" data-workarea-id="${r.workAreaId}" >Select</button</td>
                            <td>${r.workAreaName}</td>
                            <td>${r.customer.customerName}</td>                            
                            <td>${r.skill}</td>
                            <td>${r.isRunning}</td>
                            <td>
                                    <button type="button" class="btn btn-primary btn-sm rounded-circle edit" data-db-type="workarea" data-db-action="edit" data-workarea-id="${r.workAreaId}" data-controller-action="EditWorkArea"><i class="bi bi-pencil"></i></button>
                                    <button type="button" class="btn btn-danger btn-sm rounded-circle del" data-db-type="workarea" data-db-action="delete" data-workarea-id="${r.workAreaId}" data-controller-action="DeleteWorkArea"><i class="bi bi-trash"></i></button>
                            </td>`);
            }
                if (dbType == 'work') {
                    console.log($(`#${rowid}`));
                    $(`#${rowid}`).html( `<td><img src="/Pictures/${r.worker.picture}" class="rounded-circle" style="width:40px" /></td>

                            <td>${r.worker.workerName}</td>
                            <td>${r.worker.phone}</td>
                            <td>${r.worker.startDate}</td>
                            <td>${r.worker.endDate}</td>
                                <td>${r.worker.payrate}</td>
                            <td>${r.totalWorkHour}</td>
                            <td>${r.totalPayment}</td>
                            <td>${r.quantity}</td>
                            <td>
                                    <button type="button" class="btn btn-primary btn-sm rounded-circle edit" data-db-type="work" data-db-action="edit"  data-workarea-id="${r.WorkAreaId}" data-worker-id="${r.WorkerId}" data-controller-action="EditWork"><i class="bi bi-pencil"></i></button>
                                            <button type="button" class="btn btn-danger btn-sm rounded-circle del" data-db-type="work" data-db-action="delete" data-workarea-id="${r.WorkAreaId}" data-worker-id="${r.WorkerId}" data-controller-action="DeleteWork"><i class="bi bi-trash"></i></button>
                            </td>
                    `);

                }

        }

        //Function append to table start
        function addToTable(dbType, r) {;

            if (dbType == "customer") {
                $(`#${dbType}Table tbody`).append(
                    `<tr id="customer_tr_${r.customerID}">
                                <td>${r.customerName}</td>
                                <td>${r.email}</td>
                                <td>${r.customerAddress}</td>
                                <td>${r.workDescription}</td>
                                <td>
                                        <button type="button" class="btn btn-primary btn-sm rounded-circle edit" data-db-type="customer"  data-db-action="edit" data-customer-id="${r.customerID}" data-controller-action="EditCustomer"><i class="bi bi-pencil"></i></button>
                                        <button type="button" class="btn btn-danger btn-sm rounded-circle del" data-db-type="customer"  data-db-action="delete" data-customer-id="${r.customerID}" data-controller-action="DeleteCustomer"><i class="bi bi-trash" ></i></button>
                                </td>
                    </tr>`);
            }
            if (dbType == "worker") {
                $(`#${dbType}Table tbody`).append(
                    `<tr id="worker_tr_${r.workerId}">
                                <td style="width:50px"><img src="/Pictures/${r.picture}" style="width:40px" class="img-thumbnail rounded-circle" /></td>
                                <td>${r.workerName}</td>
                                <td>${r.phone}</td>
                                    <td>${formatDate(new Date(r.startDate))}</td>
                                                <td>${formatDate(new Date(r.endDate))}</td>
                                <td>${r.payrate}</td>
                                <td>${r.totalWorkHour}</td>
                                <td>${r.totalPayment}</td>
                                <td>
                                        <button type="button" class="btn btn-primary btn-sm rounded-circle"><i class="bi bi-pencil"></i></button>
                                        <button type="button" class="btn btn-danger btn-sm rounded-circle"><i class="bi bi-trash"></i></button>
                                </td>
                     </tr>`);
            }
            if (dbType == "workarea") {
                $(`#${dbType}Table tbody`).append(
                    `<tr id="worker_tr_${r.workAreaId}">
                            <td style="width:50px"><button type="button" class="btn btn-sm select" data-workarea-id="${r.workAreaId}" >Select</button</td>
                            <td>${r.workAreaName}</td>
                            <td>${r.customer.customerName}</td>                            
                            <td>${r.skill}</td>
                            <td>${r.isRunning}</td>
                            <td>
                    <button type="button" class="btn btn-primary btn-sm rounded-circle edit" data-db-type="workarea" data-db-action="edit" data-workarea-id="${r.workAreaId}" data-controller-action="EditWorkArea"><i class="bi bi-pencil"></i></button>
                    <button type="button" class="btn btn-danger btn-sm rounded-circle del" data-db-type="workarea" data-db-action="delete" data-workarea-id="${r.workAreaId}" data-controller-action="DeleteWorkArea"><i class="bi bi-trash"></i></button>
                </td>
                     </tr>`);
            }
                if (dbType == "work") {
                    $(`#${dbType}Table tbody`).append(
                        `<tr id="work_tr_${r.workAreaId}_${r.workerId}">
                                  <td><img src="/Pictures/${r.worker.picture}" class="rounded-circle" style="width:40px" /></td>

                                    <td>${r.worker.workerName}</td>
                                                                <td>${r.worker.phone}</td>
                                                                <td>${r.worker.startDate}</td>
                                                                <td>${r.worker.endDate}</td>
                                                                <td>${r.worker.payrate}</td>
                                                                <td>${r.worker.totalWorkHour}</td>
                                                                <td>${r.worker.totalPayment}</td>
                                                                <td>${r.totalWorker}</td>
                                    
                            <td>
                                    <button type="button" class="btn btn-primary btn-sm rounded-circle edit" data-db-type="work" data-db-action="edit"  data-workarea-id="${r.workAreaId}" data-worker-id="${r.workerId}" data-controller-action="EditWork"><i class="bi bi-pencil"></i></button>
                                    <button type="button" class="btn btn-danger btn-sm rounded-circle del" data-db-type="work" data-db-action="delete" data-workarea-id="${r.workAreaId}" data-worker-id="${r.workerId}" data-controller-action="DeleteWork"><i class="bi bi-trash"></i></button>
                            </td>
                    </tr>`);

                }
        }
        //Function append to table end


        //Function date format


        function formatDate(d) {
            return [
                d.getFullYear(),
                (d.getMonth() + 1).toString().padStart(2, '0'),
                d.getDate().toString().padStart(2, '0')
            ].join('-');
        }

    </script>
}
